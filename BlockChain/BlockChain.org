* 学习资料
:PROPERTIES:
:创建:       [2019-10-21 Mon 06:53]
::         [2019-10-21 Mon 06:53]
:END:

** 来源
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:42]
::         [2019-11-03 Sun 20:42]
:END:

[[https://b23.tv/av37065233/p1][北大肖臻教授<<区块链技术与应用>>]]

** 课程列表
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:43]
::         [2019-11-03 Sun 20:43]
:END:

*** DONE 简介
CLOSED: [2019-11-03 Sun 20:43]
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:43]
::         [2019-11-03 Sun 20:43]
:END:

*** DONE 比特币密码学原理
CLOSED: [2019-11-03 Sun 20:44]
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:44]
::         [2019-11-03 Sun 20:44]
:END:

*** TODO 比特币数据结构
DEADLINE: <2019-11-09 Sat> SCHEDULED: <2019-11-03 Sun>
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:44]
::         [2019-11-03 Sun 20:44]
:END:

* BTC密码学原理 :第一节:
:PROPERTIES:
:创建:       [2019-10-21 Mon 06:58]
::         [2019-10-21 Mon 06:58]
:END:

** TODO [#A] 时间轴 :关键词:
DEADLINE: <2019-10-25 Fri 20:30> SCHEDULED: <2019-10-21 Mon 08:30>
:PROPERTIES:
:创建:       [2019-10-21 Mon 07:05]
::         [2019-10-21 Mon 07:05]
:END:

*** Cryptographic hash function | 01:20
:PROPERTIES:
:创建:       [2019-11-03 Sun 23:08]
::         [2019-11-03 Sun 23:08]
:END:

*** Collision resistance | 01:47
:PROPERTIES:
:创建:       [2019-11-03 Sun 23:10]
::         [2019-11-03 Sun 23:10]
:END:

*** Hidding | 08:46
:PROPERTIES:
:创建:       [2019-11-03 Sun 23:11]
::         [2019-11-03 Sun 23:11]
:END:

*** Digital commitment | 11:07
:PROPERTIES:
:创建:       [2019-11-03 Sun 23:11]
::         [2019-11-03 Sun 23:11]
:END:

*** Puzzle friendly | 17:18
:PROPERTIES:
:创建:       [2019-11-03 Sun 23:12]
::         [2019-11-03 Sun 23:12]
:END:

** Cryptographic hash function
:PROPERTIES:
:创建:       [2019-10-21 Mon 18:42]
::         [2019-10-21 Mon 18:42]
:END:

密码学哈希函数 

*** collision resistance
:PROPERTIES:
:创建:       [2019-10-21 Mon 18:43]
::         [2019-10-21 Mon 18:43]
:END:

**** collision
:PROPERTIES:
:创建:       [2019-10-21 Mon 18:44]
::         [2019-10-21 Mon 18:44]
:END:

*哈希碰撞* ，是哈希函数的一种性质，既给定一个哈希函数，必然存在两个及以上不同的输入，得到相同的输出结果。

**** 性质
:PROPERTIES:
:创建:       [2019-10-21 Mon 18:45]
::         [2019-10-21 Mon 18:45]
:END:

是基于现实的一种经验结论，即尽管存在 *哈希碰撞* ，但是无法找到一种有效的方法人为地制造 *哈希碰撞* ；例如，对于 ~sha256()~ 其输出结果有 2^256 个，但输入有无穷个，所以存在输入不同输出相同情况，而通过遍历无穷输入找到两个输出结果一样的数据却是相当困难的！

**** 时效性
:PROPERTIES:
:创建:       [2019-10-23 Wed 06:54]
::         [2019-10-23 Wed 06:54]
:END:

Collision 的性质使 collision resistance 总存在失效的可能，即随着技术的发展，当人们找到创造 collision 的方法时，collision resistance 将消失，例如，哈希函数 Md5 目前已被破解，那么相对而言该函数不具有 collision resistance 的性质。

**** 应用
:PROPERTIES:
:创建:       [2019-10-21 Mon 18:46]
::         [2019-10-21 Mon 18:46]
:END:

对于给定得信息，无法找到另一个信息，使它们的哈希值相同，即可用保存的哈希值用于检测信息是否被篡改！

*** hiding
:PROPERTIES:
:创建:       [2019-10-23 Wed 07:08]
::         [2019-10-23 Wed 07:08]
:END:

**** 性质
:PROPERTIES:
:创建:       [2019-10-23 Wed 07:09]
::         [2019-10-23 Wed 07:09]
:END:

哈希函数由输入到输出是单向的，即通过一个输入可得到输出，而无法通过输出反向获取输入的信息；这种单向性需要内部和外部条件的支持才能实现，内部条件要求无法通过哈希函数的具体实现间接获取输入信息，外部条件要求输入样本范围足够广、取值几率相对均等，以此避免蛮力(遍历输入)破解的可能。

*** Digital commitmant(数字签名)
:PROPERTIES:
:创建:       [2019-10-23 Wed 18:22]
::         [2019-10-23 Wed 18:22]
:END:

**** sealed envelope
:PROPERTIES:
:创建:       [2019-10-23 Wed 18:31]
::         [2019-10-23 Wed 18:31]
:END:

数字签名如同 *密封信件* ，一个例子，对未来的预言信息，需要加密才能避免对实际结果的影响，待结果出现后再解密信息进行对比。

**** 哈希值为何能做为数字签名
:PROPERTIES:
:创建:       [2019-10-23 Wed 18:34]
::         [2019-10-23 Wed 18:34]
:END:

哈希值 *collision resistance* 的性质使哈希值与输入信息相对唯一，如同信息被密封一样，无法有效的篡改； *hiding* 性质，保证无法通过公布出去的哈希值有效地获得输入信息，如同信件装入信封，知道信息在此却无法探知信息的实际内容。

*** puzzle friendly
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:20]
::         [2019-10-26 Sat 12:20]
:END:

哈希值的计算是不可预测的，即无法通过调整特定的输入使哈希值在某个范围内。

**** 挖矿
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:28]
::         [2019-10-26 Sat 12:28]
:END:

比特币区块包含一个块头(block header)，块头包含若干域，其中一个域是可设置的随机数(nonce)；挖矿的过程就是不断的试随机数(nonce)，使包含该随机数块头的哈希值落在指定的范围内。

**** 运用
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:32]
::         [2019-10-26 Sat 12:32]
:END:

基于 *puzzle friendly* 挖矿无捷径可走，只能一个一个的试随机数 nonce。

**** 挖矿的验证
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:35]
::         [2019-10-26 Sat 12:35]
:END:

尽管挖矿很难，但验证很容易，只要对该区块头计算一次哈希值即可。

*** SHA-256
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:37]
::         [2019-10-26 Sat 12:37]
:END:

比特币运用的哈希函数(Secure Hash.Algorithm)，满足以上所有性质。

** 签名
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:38]
::         [2019-10-26 Sat 12:38]
:END:

*** Public key,  private key
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:40]
::         [2019-10-26 Sat 12:40]
:END:

公私钥对是比特币中的账号，是 *非对称的加密体系* (asymmetric encryption algorithm)。

**** Symmetric encryption algorithm
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:42]
::         [2019-10-26 Sat 12:42]
:END:

*对称加密体系* 信息传递的双方使用同一个密钥对传递的信息进行加密和解密。缺陷是，在传递信息前需将密钥分发给传递信息的双方，一旦分发过程中密钥被截获，那么信息传递不再安全。

**** Asymmetric encryption algorithm
:PROPERTIES:
:创建:       [2019-10-26 Sat 12:54]
::         [2019-10-26 Sat 12:54]
:END:

*非对称的加密体系* 信息的传递是使用一对密钥加密和解密，加密信息使用公钥，解密信息使用私钥；传递信息时，信息接受方将公钥分发出去，信息传递方使用接受方的公钥加密信息，接收方获得信息后使用本地的私钥解密以获得信息的内容。由于私钥是保存在本地，避免了 *对称加密体系* 中解密密钥被获取的可能，信息只能被接收方解密。

*** 签名如何使用
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:35]
::         [2019-11-03 Sun 20:35]
:END:

签名用于验证接受到的信息是否真实，发送者使用私钥绑定信息传递给接受方，接收方使用发送方的公钥解码信息，解码成功则验证了信息(发送人)的真实性。

* 比特币的数据结构 :第二节:
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:37]
::         [2019-11-03 Sun 20:37]
:END:

** TODO 时间轴 :关键词:
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:48]
::         [2019-11-03 Sun 20:48]
:END:

*** Hash pointers | 0:28
:PROPERTIES:
:创建:       [2019-11-03 Sun 20:49]
::         [2019-11-03 Sun 20:49]
:END:

*** Block chain | 02:18
:PROPERTIES:
:创建:       [2019-11-03 Sun 21:11]
::         [2019-11-03 Sun 21:11]
:END:

*** Tamper-evident log | 05:18
:PROPERTIES:
:创建:       [2019-11-03 Sun 21:27]
::         [2019-11-03 Sun 21:27]
:END:

*** Merkle tree | 09:20
:PROPERTIES:
:创建:       [2019-11-03 Sun 21:58]
::         [2019-11-03 Sun 21:58]
:END:

** Block chins
:PROPERTIES:
:创建:       [2019-11-03 Sun 21:14]
::         [2019-11-03 Sun 21:14]
:END:

*区块链* 相对于普通链表， *区块链* 使用哈希指针代替链表指针，每一个区块记录了前一个区块的位置及哈希值。
区块链的第一个区块叫 /创世纪区块(genesis block)/ ，最后一个区块为 /最近创建的区块(most recent block)/ 。
每一个区块包含一个哈希指针，指向最后一个区块的哈希指针由系统维护。

*** Hash pointers
:PROPERTIES:
:创建:       [2019-11-03 Sun 21:05]
::         [2019-11-03 Sun 21:05]
:END:

*哈希指针* 存放了指向某个结构体的指针以及该结构体的哈希值，即 *哈希指针* 不仅能找到该结构体以及检验该结构体是否被篡改。

*** 区块链哈希指针的计算
:PROPERTIES:
:创建:       [2019-11-03 Sun 21:24]
::         [2019-11-03 Sun 21:24]
:END:

哈希指针的哈希值是将前一个区块中所有的内容取哈希值，包括该区块中包含的(指向前一区块)哈希指针。

*** Tamper-evident log :性质:
:PROPERTIES:
:创建:       [2019-11-03 Sun 21:35]
::         [2019-11-03 Sun 21:35]
:END:

区块链一旦产生其内容将不易更改，如果某个区块内容被篡改，相应的下一个区块哈希指针将变化，这种状态改变一直延续至最后一个区块，那么指向最后一块区块的哈希指针也会变化，而该指针在区块链生成时已保存在系统中，由系统维护，此时系统判定区块被篡改。
该性质也使系统无需维护区块链中所有的区块，只维护其中一部分，当需要前一区块时，可向其它节点请求，对请求的结果取哈希值并与系统中储存的第一个区块中的哈希值对比，以验证请求的结果。

** Merkle tree
:PROPERTIES:
:创建:       [2019-11-03 Sun 21:59]
::         [2019-11-03 Sun 21:59]
:END:

*** Data blocks :组成:
:PROPERTIES:
:创建:       [2019-11-03 Sun 22:04]
::         [2019-11-03 Sun 22:04]
:END:

Merkle tree 最底层组成部分。

*** 节点
:PROPERTIES:
:创建:       [2019-11-03 Sun 22:07]
::         [2019-11-03 Sun 22:07]
:END:

Merkle tree 内部节点是哈希指针。

*** Root hash
:PROPERTIES:
:创建:       [2019-11-03 Sun 22:09]
::         [2019-11-03 Sun 22:09]
:END:

根节点的哈希值。

